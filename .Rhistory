z<-z-1
}
z<-5
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){
z<-z+1
}else
z<-z-1
}
z<-5
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){
z<-z+1
}else
z<-z-1
}
contador<-contador + 11
{
len<-c(len,length(vector))
}
hist(len)
plot(vector, type ="l")
?plot
hist(len)
z<-5
contador<-1
vector<-c()
while((z>=3 && z<=10)&& contador<100){
vector<-c(vector,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+0.1
}else{
z<-z-0.1
}
contador<-contador+1
}
plot(vector,type="l")
y=x^2+5
x<- (-30:30)/10
y<-x^2+5
plot(y,type = "l")
z<-5
contador<-1
vector<-c()
while((z>=3 && z<=10)&& contador<100){
vector<-c(vector,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+0.1
}else{
z<-z-0.1
}
contador<-contador+1
}
plot(vector,type="l")
y=x^2+5
x<- (-3:3)/10
y<-x^2+5
plot(y,type = "l")
z<-5
contador<-1
vector<-c()
while((z>=3 && z<=10)&& contador<100){
vector<-c(vector,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+0.1
}else{
z<-z-0.1
}
contador<-contador+1
}
plot(vector,type="l")
y=x^2+5
x<- (-300:300)/100
y<-x^2+5
plot(y,type = "l")
y<-c()
for(i in 1:100){
y<-c(y,i^2+5)
}
plot(y,type = "l")
for(i in 1:50){
if(i<=25){
next
}
print(i)
}
for(i in 1:50){
if(i<=25){
next
}
if(i>40){
break
}
print(i)
}
suma2<-function(x,y){
x+y
}
suma<-3
suma<-3
suma2(1,6)
dptu("suma2",file="suma2.R")
dput("suma2",file="suma2.R")
dput("suma2",file="suma2.R")
dump("suma2",file="suma2.R")
source("suma2.R")
promedio<-function(x,y){
x/y
}
promedio(c(1:10))
PromedioCol<-function(x){
columnas<-ncol(x)
for(i in 1:Cols){
#sum(x[,i])/nrow(x[,i])
v<-c(v,  mean(x[,i]))
}
v
PromedioCol<-function(x){
columnas<-ncol(x)
for(i in 1:Cols){
#sum(x[,i])/nrow(x[,i])
v<-c(v,  mean(x[,i]))
}
v
}
PromedioCol<-function(x,quitarNA=T){
cols<-ncol(x)
v<-c()
for(i in 1:Cols){
#sum(x[,i])/nrow(x[,i])
v<-c(v,  mean(x[,i],na,rm quitarNA))
}
v
}
PromedioCol<-function(x,quitarNA=T){
cols<-ncol(x)
v<-c()
for(i in 1:Cols){
#sum(x[,i])/nrow(x[,i])
v<-c(v,  mean(x[,i],na,rm quitarNA))
}
v
}
PromedioCol<-function(x,quitarNA=T){
cols<-ncol(x)
v<-c()
for(i in 1:Cols){
v<-c(v,mean(x[,i],na,rm=quitarNA))
}
v
}
promedioCol(airquality)
PromedioCol<-function(x,quitarNA=T){
cols<-ncol(x)
v<-c()
for(i in 1:Cols){
v<-c(v,mean(x[,i],na,rm=quitarNA))
}
v
}
y<- 10
f<- function(x){
y<-2
y^2+g(x)
}
g<-function(x){
x*y
}
x
f(3)
x<-as.Date("1970-01-01")
x
x<-as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-02"))
x<-as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-02"))
x<- as.Date("1997-06-01")
unclass(x)
x<- as.Date("1997-06-01")
unclass(x)
y<- as.Date("2017-03-21")
unclass(y)
unclass(y-x)
x<-as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-02"))
x<- as.Date("1997-06-01")
unclass(x)
y<- as.Date("1995-05-14")
unclass(y)
unclass(y-x)
x<-as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-02"))
x<- as.Date("1997-06-01")
unclass(x)
y<- as.Date("1995-05-14")
unclass(y)
unclass(y-x)
x<-as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-02"))
x<- as.Date("1997-09-07")
unclass(x)
y<- as.Date("2017-03-21")
unclass(y)
unclass(y-x)
x<- as.Date("1997-09-07")
unclass(x)
y<- as.Date("2017-03-21")
unclass(y)
unclass(y-x)
date()
?as.POSIXct.date
date()
ct<- as.POSIXct.date(date())
lt<-as.POSIXlt.date(date())
date()
ct<- as.POSIXct.date(date())
lt<-as.POSIXlt.date(date())
date()
ct<- as.POSIXct.date(Sys.time())
lt<-as.POSIXlt.date(Sys.time())
weekdays(x)
weekdays(y)
x<- as.Date("1997-09-07")
unclass(x)
x<- as.Date("1997-09-07")
unclass(x)
weekdays(x)
lapply
?lapply
x<-list(a=1:5,b=rnorm(10000))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10000))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10000))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10000))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
apply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x,mean)
x<-1:4
lapply(x,runif)
x<-1:4
lapply(x,runif)
x<-1:4
lapply(x,runif)
x<-1:4
lapply(x,runif,max=15,min=5)
x<-1:4
lapply(x,runif,max=15,min=5)
x<-1:4
lapply(x,runif,max=15,min=5)
x<-1:4
lapply(x,runif,max=15,min=5)
x<-1:4
lapply(x,runif,max=15,min=5)
x<-1:4
lapply(x,runif,max=15,min=5)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,sum)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,200,mean)
apply(x,100,sum)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,200,mean)
apply(x,100,sum)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,0,sum)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,0,sum)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,sum)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,sum)
x
x
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,sum)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,sum)
x<-matrix(rnorm(200),20,10)
apply(x,1,quantile,probs=c(0.25,0.75))
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
apply(x,1,quantile,probs=c(0.25,0.75))
swirl()
swirl
swirl()
install_from_swirl("R_Programming")
install.packages("swirl")
library(swirl)
swirl()
swirl
a<-array(rnorm(2*2*10),c(2,2,10))
swirl()
bye
bye
library(datasets)
install.packages("datasets")
library(datasets)
library(datasets)
install.packages("datasets")
install.packages("datasets")
library(datasets)
install.packages("datasets")
install.packages("datasets")
library(datasets)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(datasets)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(datasets)
library("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(datasets)
install.packages("datasets")
install.packages("datasets")
library(datasets)
airquality
PromedioCol<-arquality
PromedioCol<-arquality
cols<-ncol(Temp)
PromedioCol<-arquality
tapply(airquality,airquality$Month,airquality$Temp,mean,simplify =T)
tapply(airquality$Temp,airquality$Month,mean,simplify =T)
sapply(split(airquality$Temp,airquality$Month),mean )
split(airquality$Temp,airquality$Month)
s<-split(airquality,airquality$Month)
s
lapply(s,function(x)colMeans(x[,1:3]))
airquality
s<-split(airquality,airquality$Month)
lapply(s,function(x)colMeans(x[,1:3]))
lapply(s,function(x)colMeans(x[,1:3],na.rm =TRUE))
sapply(s,function(x)colMeans(x[,1:3]))
sapply(s,function(x)colMeans(x[,1:3]),na.rm=TRUE)
sapply(s,function(x)colMeans(x[,1:3],na.rm=TRUE))
sapply(s,function(x)colMeans(x[,1:3],na.rm=TRUE))
x<-rnorm(10)
f1<-gl(2,5)
f2<-gl(5,2)
f1
f2
interaction(f1,f2)
x
str(split(x,list(f1,f2)))
?str
log(-1)
imprimeMSJ<-function(x){
if(x>0)
print("x es mayor que 0")
else
print("x es menoro igual a 0")
invisible(x)
}
imprimeMSJ<-function(x){
if(is.na(x))
print("x es un valor faltante")
else if (x>0)
print("x es mayor que 0")
else
print("xes menor o igual a 0")
invisible(x)
}
x
?options
options(error=recover)
read.csv("noexiste")
